input CreateDigitalPaymentInput {
  accessToken: String!
  supplierOrderId: String!
  amount: Float!
  invoiceId: String!
  paymentOption: PaymentOption!
}

union CreateDigitalPaymentResult = JpMorganCreateDigitalPayment | DigitalPaymentFailed

type JpMorganCreateDigitalPayment {
  merchantId: String!
  terminalId: String!
  encData: String!
  bankId: String!
}

input FinalizeDigitalPaymentInput {
  encData: String!
  accessToken: String!
}

union FinalizeDigitalPaymentResult = DigitalPayment | DigitalPaymentFailed

type DigitalPayment {
  paymentId: String!
  supplierOrderId: String!
  amount: Float!
  responseCode: String!
  message: String!
}

type DigitalPaymentFailed {
  text(languageTag: String!): String!
  message: String!
}

type GetSupplierPaymentOptionInput {
  supplierId: Long!
  accessToken: String!
}

type UpsertSupplierPaymentOptionInput {
  supplierId: Long!
  paymentOptions: [PaymentOption]!
  accessToken: String!
}

union SupplierPaymentOptionResult = GetSupplierPaymentOption | DigitalPaymentFailed

type GetSupplierPaymentOption {
  supplierId: Long!
  paymentOptions: [PaymentOption]!
}

enum PaymentOption {
  UPI, ISG_DIGITAL_PAYMENT, BNPL;
}
