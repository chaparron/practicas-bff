plugins {
    id "java-library"
    id "groovy"
    id "org.springframework.boot" apply false
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}


dependencies {
    implementation(platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES))
    implementation(platform("org.springframework.cloud:spring-cloud-dependencies:Greenwich.RELEASE"))
    implementation(platform("org.springframework.cloud:spring-cloud-sleuth:2.0.4.RELEASE"))

    implementation "com.github.ben-manes.caffeine:caffeine:2.9.2"
    implementation "wabi2b.sdk:grocery-listing:1213-2c860406618c7c3def9500bdd716e65a2ffb8f7c"
    implementation "wabi2b.sdk:supplier-credits:10013-5b3ebcb2efd390ddb0fffcc003762f30b7f16055"
    implementation "wabi2b.sdk:cms:1119-5372302ac81f992853ad482006674c826061e562"
    implementation "wabi2b:regional-config:1029-e8936196376587d6a2a5f4f89c6ddc995bed4e16"
    implementation "com.wabi2b:phone-notifier-sdk:10144-76744096d3a1c81c01910dfeb44eff235aa2f690"
    implementation "wabi2b.sdk:wabi2b-api-sdk:1959-e12cbc005dc532f26157749159e9835369511a45"
    implementation "com.wabi2b:customers-sdk:10104-34d45cc99836a74e929aa6b689bfe2590c10d87a"
    implementation "wabi2b:payments-sdk:10297-840fd17a995e8b413a6ea05a000314d4e26c3a27"
    implementation "wabi2b:third-party-integration:10032-174a757eb2148e06cd2af7a5d543e47ec89778b4"
    implementation "wabi2b:feature-flags:10037-dcc43a1b3566323e441c71e972a670640a0b1480"
    implementation "wabi2b:bnpl-credits-sdk:1074-16a9f966f2f545d1da818eae1d29906d658cdad1"


    implementation "io.ktor:ktor-client-cio:1.6.5"

    def graphQL = '5.9.0'

    compile 'com.sendgrid:sendgrid-java:4.2.1'


    compile "com.graphql-java-kickstart:graphql-spring-boot-starter:$graphQL"
    compile "com.graphql-java-kickstart:graphiql-spring-boot-starter:$graphQL"

    compile 'com.newrelic.agent.java:newrelic-api:5.14.0'
    compile 'com.pubnub:pubnub-gson:4.18.0'
    compile 'org.codehaus.groovy:groovy-all'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.cloud:spring-cloud-starter-sleuth'
    compile 'org.springframework.cloud:spring-cloud-starter-zipkin'
    compile 'org.springframework.security.oauth:spring-security-oauth2:2.3.1.RELEASE'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation("com.amazonaws:aws-lambda-java-events:3.10.0")
    implementation("com.amazonaws:aws-java-sdk-sqs:1.12.112")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations.all {
    resolutionStrategy.eachDependency {
        if (requested.group == "org.apache.logging.log4j" && requested.version <= "2.17.0") {
            useVersion("2.17.0")
            because("To avoid RCE vulnerability.")
        }
        if (requested.group == "ch.qos.logback" && requested.name == "logback-classic" && requested.version <= "1.2.8") {
            useVersion("1.2.8")
            because("To avoid RCE vulnerability.")
        }
        if (requested.group == "ch.qos.logback" && requested.name == "logback-core" && requested.version <= "1.2.8") {
            useVersion("1.2.8")
            because("To avoid RCE vulnerability.")
        }
    }
}

clean {
    delete 'out'
}