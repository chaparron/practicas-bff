plugins {
    id "java-library"
    id "groovy"
    id "org.springframework.boot" apply false
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}


dependencies {
    implementation(platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES))
    implementation(platform("org.springframework.cloud:spring-cloud-dependencies:Greenwich.RELEASE"))
    implementation(platform("org.springframework.cloud:spring-cloud-sleuth:2.0.4.RELEASE"))

    implementation "com.github.ben-manes.caffeine:caffeine:2.9.2"
    implementation "wabi2b.sdk:grocery-listing:1288-f7c0ef3d32e8436d7bb8f2335c7bd86bf80f879e"
    implementation "wabi2b.sdk:supplier-credits:10013-5b3ebcb2efd390ddb0fffcc003762f30b7f16055"
    implementation "wabi2b.sdk:cms:1153-e86efebb112d69788b1c8154d1682d3c4a8a64e9"
    implementation "wabi2b:regional-config:1009-548778e508e256f16446721342ea7035a8fced20"
    implementation "com.wabi2b:phone-notifier-sdk:10144-76744096d3a1c81c01910dfeb44eff235aa2f690"
    implementation "com.wabi2b:notifications-sdk:1035-c5d514c1dd9e9586e2e6f644304fea43ccb0ff1b"
    implementation "wabi2b.sdk:wabi2b-api-sdk:1959-e12cbc005dc532f26157749159e9835369511a45"
    implementation "com.wabi2b:customers-sdk:1160-8d83dca52d5945f9807bf8c46d37bfad44460cba"
    implementation "wabi2b:payments-sdk:1391-fd740d94626ccdfddd886fdc60eb2c6d8fe71e7c"
    implementation "wabi2b:third-party-integration:10032-174a757eb2148e06cd2af7a5d543e47ec89778b4"
    implementation "wabi2b:feature-flags:10037-dcc43a1b3566323e441c71e972a670640a0b1480"
    implementation "wabi2b:bnpl-credits-sdk:1121-2d83a3cdabf12a94abb523cb3a9faee4c8e8642a"
    implementation "com.wabi2b:external-orders-sdk:1056-1d382fd21e481ac5b4cc8d830fb00631b7f48b22"
    implementation "wabi2b:digital-payments-sdk:1152-e42b58bf7e201ee49ddb534be8d9d1b32ee7cac6"
    implementation "yopdev.wabi:sdk:1012-6fd962f54addb379fd5ee0e497a1b39ce67fe00a"

    implementation "io.ktor:ktor-client-cio:1.6.5"

    def graphQL = '5.9.0'

    compile 'com.sendgrid:sendgrid-java:4.2.1'


    compile "com.graphql-java-kickstart:graphql-spring-boot-starter:$graphQL"
    compile "com.graphql-java-kickstart:graphiql-spring-boot-starter:$graphQL"

    compile "com.newrelic.agent.java:newrelic-api:5.14.0"
    compile "com.pubnub:pubnub-gson:4.18.0"
    compile "org.codehaus.groovy:groovy-all"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.cloud:spring-cloud-starter-sleuth"
    compile "org.springframework.cloud:spring-cloud-starter-zipkin"
    compile "org.springframework.security.oauth:spring-security-oauth2:2.3.1.RELEASE"
    compile "org.springframework.cloud:spring-cloud-aws-parameter-store-config"

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation("com.amazonaws:aws-lambda-java-events:3.10.0")
    implementation("com.amazonaws:aws-java-sdk-sqs:1.12.112")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.github.tomakehurst:wiremock:2.24.1'
}

configurations.all {
    resolutionStrategy.eachDependency {
        if (requested.group == "org.apache.logging.log4j" && requested.version <= "2.17.0") {
            useVersion("2.17.0")
            because("To avoid RCE vulnerability.")
        }
        if (requested.group == "ch.qos.logback" && requested.name == "logback-classic" && requested.version <= "1.2.8") {
            useVersion("1.2.8")
            because("To avoid RCE vulnerability.")
        }
        if (requested.group == "ch.qos.logback" && requested.name == "logback-core" && requested.version <= "1.2.8") {
            useVersion("1.2.8")
            because("To avoid RCE vulnerability.")
        }
    }
}

clean {
    delete 'out'
}